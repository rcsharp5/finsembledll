<UserControl x:Class="ChartIQ.Finsemble.FinsembleWPFHeader"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ChartIQ.Finsemble"
             mc:Ignorable="d" d:DesignWidth="300" Height="32.055">
    <UserControl.Resources>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FF039BFF"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FF039BFF"/>
        <SolidColorBrush x:Key="CloseButton.MouseOver.Background" Color="#FFEF1436"/>
        <SolidColorBrush x:Key="CloseButton.Pressed.Background" Color="#FFEF1436"/>
        <SolidColorBrush x:Key="InactiveButton.MouseOver.Background" Color="#FF133F7C"/>
        <SolidColorBrush x:Key="InactiveButton.Pressed.Background" Color="#FF133F7C"/>
        <SolidColorBrush x:Key="InactiveCloseButton.MouseOver.Background" Color="#FFEF1436"/>
        <SolidColorBrush x:Key="InactiveCloseButton.Pressed.Background" Color="#FFEF1436"/>
        <Style x:Key="LinkerPillStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="4">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Button.MouseOver.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Pressed.Background}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ToolbarRegularButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="0">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.MouseOver.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Pressed.Background}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ToolbarRegularLabel" TargetType="{x:Type Label}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="0">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.MouseOver.Background}"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ToolbarCloseButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="0">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource CloseButton.MouseOver.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource CloseButton.Pressed.Background}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="InactiveToolbarRegularButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="0">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource InactiveButton.MouseOver.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource InactiveButton.Pressed.Background}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="InactiveToolbarRegularLabel" TargetType="{x:Type Label}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Label}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="0">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource InactiveButton.MouseOver.Background}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="InactiveToolbarCloseButton" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="0">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource InactiveCloseButton.MouseOver.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource InactiveCloseButton.Pressed.Background}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid Margin="0,0,0,264">
        <Canvas Name="Toolbar" Height="32" Margin="0,0,0,0" VerticalAlignment="Top" MouseDown="Toolbar_MouseDown" MouseUp="Toolbar_MouseUp" MouseMove="Toolbar_MouseMove" Background="#FF233958">
            <Button Style="{StaticResource ToolbarRegularButton}" Name="Minimize" ToolTip="Minimize" Content="4" Width="32" Click="Minimize_Click" HorizontalAlignment="Right" Canvas.Right="64" FontFamily="/Finsemble;component/Resources/#finfont" Background="Transparent" BorderBrush="{x:Null}" Foreground="White" Height="32" FontSize="16" />
            <Button Style="{StaticResource ToolbarRegularButton}" Name="Maximize" ToolTip="Maximize" Content="3" Width="32" Click="Maximize_Click" HorizontalAlignment="Right" Canvas.Right="32" Background="Transparent" BorderBrush="{x:Null}" Foreground="White" FontFamily="/Finsemble;component/Resources/#finfont" Height="32" FontSize="16" />
            <Button Style="{StaticResource ToolbarCloseButton}" Name="Close" ToolTip="Close" Content ="p" Width="32" Click="Close_Click" HorizontalAlignment="Right" Canvas.Right="0" FontFamily="/Finsemble;component/Resources/#finfont" Height="32" Background="Transparent" BorderBrush="{x:Null}" Foreground="White" FontSize="16"/>
            <Button Style="{StaticResource ToolbarRegularButton}" Name="Linker" ToolTip="Link Data" Content="1" Width="32" Click="Linker_Click" HorizontalAlignment="Left"  Canvas.Left="0" FontFamily="/Finsemble;component/Resources/#finfont" Height="32" Background="Transparent" BorderBrush="{x:Null}" Foreground="White" FontSize="16"/>
            <Button Style="{StaticResource ToolbarRegularButton}" Name="DockingButton" Content=">" Width="32" Click="Docking_Click" HorizontalAlignment="Right" Canvas.Right="64" FontFamily="/Finsemble;component/Resources/#finfont" Background="Transparent" BorderBrush="{x:Null}" Foreground="White" Height="32" FontSize="16" Visibility="Hidden" />
            <Button Style="{StaticResource ToolbarRegularButton}" Name="AppSuites" Content="z" Width="32" Click="AppSuites_Click" HorizontalAlignment="Right" Canvas.Right="96" FontFamily="/Finsemble;component/Resources/#finfont" Background="Transparent" BorderBrush="{x:Null}" Foreground="White" Height="32" FontSize="16" Visibility="Hidden" />
            <Label Name="Title" Content="Hi! I'm a WPF App!" Foreground="White" VerticalAlignment="Center" Canvas.Left="32" Canvas.Right="105" FontSize="16" HorizontalContentAlignment="Center"/>
            <Label Style="{StaticResource ToolbarRegularLabel}" Name="Emitter" ToolTip="Drag To Share" Content="*" Canvas.Left="32" Canvas.Top="0" FontFamily="/Finsemble;component/Resources/#finfont" Background="Transparent" BorderBrush="{x:Null}" Foreground="White" FontSize="16" Height="32" Width="32" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MouseDown="Label_MouseDown" Visibility="Hidden"/>
        </Canvas>
    </Grid>
</UserControl>
